[{"/home/karim/myProjects/chess/src/types.ts":"1","/home/karim/myProjects/chess/src/moves.ts":"2","/home/karim/myProjects/chess/src/components/Game.tsx":"3","/home/karim/myProjects/chess/src/components/Home.tsx":"4","/home/karim/myProjects/chess/src/index.tsx":"5","/home/karim/myProjects/chess/src/reportWebVitals.ts":"6","/home/karim/myProjects/chess/src/App.tsx":"7"},{"size":3445,"mtime":1609689440722,"results":"8","hashOfConfig":"9"},{"size":5528,"mtime":1609699715429,"results":"10","hashOfConfig":"9"},{"size":6645,"mtime":1609698222905,"results":"11","hashOfConfig":"9"},{"size":587,"mtime":1609696146590,"results":"12","hashOfConfig":"9"},{"size":510,"mtime":1609427364908,"results":"13","hashOfConfig":"9"},{"size":467,"mtime":1609427650328,"results":"14","hashOfConfig":"9"},{"size":1706,"mtime":1609695771689,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dys0no",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/karim/myProjects/chess/src/types.ts",[],"/home/karim/myProjects/chess/src/moves.ts",[],"/home/karim/myProjects/chess/src/components/Game.tsx",["31"],"/home/karim/myProjects/chess/src/components/Home.tsx",[],"/home/karim/myProjects/chess/src/index.tsx",[],"/home/karim/myProjects/chess/src/reportWebVitals.ts",[],"/home/karim/myProjects/chess/src/App.tsx",["32"],"import React from 'react';\n\nimport { GameState, initialGameState } from './types';\nimport { Game } from './components/Game';\nimport { BrowserRouter, Route, Switch, useParams } from 'react-router-dom';\nimport { Home } from './components/Home';\n\nfunction App() {\n    window.sessionStorage.setItem('color', 'white');\n    return (\n        <div style={appStyles}>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/game/:gameId\">\n                        <GameWrapper />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n            {/* <Game {...initialGameState} /> */}\n        </div>\n    );\n}\n\nfunction GameWrapper() {\n    const { gameId } = useParams<{ gameId: string }>();\n    const [gameState, setGameState] = React.useState<GameState | undefined>();\n\n    React.useEffect(() => {\n        const fetchGameState = async () => {\n            const response = await fetch(`http://localhost:8000/get-game-state/${gameId}`);\n            const body = await response.json();\n            const color = window.sessionStorage.getItem('color');\n            if (!color) {\n                window.sessionStorage.setItem('color', 'black');\n            }\n            setGameState(body);\n        };\n        fetchGameState();\n    }, [gameId]);\n\n    return <div>{gameState ? <Game {...gameState} /> : <LoadingSpinner />}</div>;\n}\n\nfunction LoadingSpinner() {\n    return <div>Loading ...</div>;\n}\n\nconst appStyles = {\n    height: '100vh',\n    width: '100vw',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n};\n\nexport default App;\n",{"ruleId":"33","severity":1,"message":"34","line":23,"column":8,"nodeType":"35","endLine":23,"endColumn":37,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":21,"nodeType":"39","messageId":"40","endLine":3,"endColumn":37},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gameState'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPotentialMoves' needs the current value of 'gameState'.","ArrayExpression",["41"],"@typescript-eslint/no-unused-vars","'initialGameState' is defined but never used.","Identifier","unusedVar",{"desc":"42","fix":"43"},"Update the dependencies array to be: [gameState, gameState.activeCoordinates]",{"range":"44","text":"45"},[769,798],"[gameState, gameState.activeCoordinates]"]